<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
<meta http-equiv="x-ua-compatible" content="ie=edge" />

<title>JModalWindow</title>
<meta name="description" content="The JModalWindow project was created to support modal functionality, similar to JDialog, without blocking all frames." />
<meta name="author" content="Jene Jasper" />
<meta name="robots" content="index, follow" />

<link rel="stylesheet" href="css/bootstrap.min.css" />
<link rel="stylesheet" href="css/font-awesome.min.css" />
<link rel="stylesheet" href="css/basketball.css" />

<!-- <link rel="stylesheet" href="https://hackerthemes.com/charming/examples/lander/charming/dist/css/bootstrap.min.css"/> -->
<!-- <link rel="stylesheet" href="https://hackerthemes.com/charming/examples/lander/modules/pe-icon-7-stroke/Pe-icon-7-stroke.css"/> -->
<!-- <link rel="stylesheet" href="https://hackerthemes.com/charming/examples/lander/node_modules/font-awesome/css/font-awesome.min.css"/> -->
<!-- <link rel="stylesheet" href="https://hackerthemes.com/charming/examples/lander/charming/dist/css/charming.min.css"/> -->
<link rel="stylesheet" href="https://hackerthemes.com/charming/examples/lander/css/lander-example.css" />
</head>

<body class="site jmodalwindow-cover-page">
  <header class="site-header">
    <div id="generic-navigation" />
  </header>

  <main class="site-content">
  <div class="container application">
    <div class="row">
      <div class="col-xs-12 col-md-6 offset-md-3 card">
        <h1>JModalWindow</h1>

        <div class="alert alert-warning" role="alert">
          <p>
            <span class="text-nowrap"><strong>Version</strong> 2.3</span>
          </p>

          <p class="m-b-0">
            <span class="text-nowrap"><span class="fa fa-copyright" aria-hidden="true" /> <span id="copyrightPeriod" /></span> Free Dumb Bytes
          </p>

          <p>
            <small>Last update: 2016/11/07 00:58</small>
          </p>
        </div>
      </div>
    </div>
  </div>

  <div class="container m-t-3">
    <div class="row">
      <div class="col-xs-12">
        <blockquote class="blockquote card">
          <div class="media m-t-1">
            <div class="media-left media-top">
              <a href="jmodalwindow.xhtml"><img src="images/jmw/jmodalwindow.gif" alt="The JModalWindow Project" class="img-thumbnail" /></a>
            </div>

            <div class="media-body">
              <p>The JModalWindow project was created to support modal functionality, similar to JDialog, without blocking all frames.</p>

              <p class="hidden-xs-down">
                Source code, binaries, API documentation, and a demo are all available for <a href="#download">download</a>.
              </p>

              <p class="hidden-xs-down">
                Since the Java.net and Kenai.com forges will be going dark on April 28, 2017 the <a href="#issues">issues</a> are just listed below.
              </p>

              <p class="hidden-xs-down">
                For the same reason the Source Code Repository will be relocated to <a href="https://bitbucket.org/freedumbytes/jmodalwindow">jmodalwindow.git</a>.
              </p>
            </div>
          </div>
        </blockquote>
      </div>
    </div>
  </div>

  <div class="container m-t-3 hidden-xs-down">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">SUN Article</h3>

        <p>Upcoming...</p>

        <div id="download"></div>
      </div>
    </div>
  </div>

  <div class="container m-t-3">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">Downloads</h3>

        <table class="table table-sm table-striped">
          <thead>
            <tr>
              <th>Source</th>
              <th>Binary</th>
              <th class="hidden-sm-down">JavaDoc</th>
              <th class="hidden-xs-down">Demo</th>
            </tr>
          </thead>

          <tbody>
            <tr>
              <td><a href="download/swingx-1.0-src.jar">swingx-1.0-src.jar</a></td>
              <td><a href="download/swingx-1.0.jar">swingx-1.0.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.0-doc.jar">swingx-1.0-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.0-demo.jar">swingx-1.0-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.2-src.jar">swingx-1.2-src.jar</a></td>
              <td><a href="download/swingx-1.2.jar">swingx-1.2.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.2-doc.jar">swingx-1.2-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.2-demo.jar">swingx-1.2-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.3-src.jar">swingx-1.3-src.jar</a></td>
              <td><a href="download/swingx-1.3.jar">swingx-1.3.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.3-doc.jar">swingx-1.3-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.3-demo.jar">swingx-1.3-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.4-src.jar">swingx-1.4-src.jar</a></td>
              <td><a href="download/swingx-1.4.jar">swingx-1.4.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.4-doc.jar">swingx-1.4-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.4-demo.jar">swingx-1.4-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.5-src.jar">swingx-1.5-src.jar</a></td>
              <td><a href="download/swingx-1.5.jar">swingx-1.5.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.5-doc.jar">swingx-1.5-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.5-demo.jar">swingx-1.5-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.6-src.jar">swingx-1.6-src.jar</a></td>
              <td><a href="download/swingx-1.6.jar">swingx-1.6.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.6-doc.jar">swingx-1.6-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.6-demo.jar">swingx-1.6-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-1.7-src.jar">swingx-1.7-src.jar</a></td>
              <td><a href="download/swingx-1.7.jar">swingx-1.7.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-1.7-doc.jar">swingx-1.7-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.7-demo.jar">swingx-1.7-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-2.1-src.jar">swingx-2.1-src.jar</a></td>
              <td><a href="download/swingx-2.1.jar">swingx-2.1.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-2.1-doc.jar">swingx-2.1-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-2.1-demo.jar">swingx-2.1-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-2.2-src.jar">swingx-2.2-src.jar</a></td>
              <td><a href="download/swingx-2.2.jar">swingx-2.2.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-2.2-doc.jar">swingx-2.2-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-2.2-demo.jar">swingx-2.2-demo.jar</a></td>
            </tr>

            <tr>
              <td><a href="download/swingx-2.3-src.jar">swingx-2.3-src.jar</a></td>
              <td><a href="download/swingx-2.3.jar">swingx-2.3.jar</a></td>
              <td class="hidden-sm-down"><a href="download/swingx-2.3-doc.jar">swingx-2.3-doc.jar</a></td>
              <td class="hidden-xs-down"><a href="download/swingx-2.3-demo.jar">swingx-2.3-demo.jar</a></td>
            </tr>

            <tr>
              <td colspan="2"></td>
              <td class="hidden-sm-down"></td>
              <th class="hidden-xs-down">Sample from Article</th>
            </tr>

            <tr>
              <td colspan="2"></td>
              <td class="hidden-sm-down"></td>
              <td class="hidden-xs-down"><a href="download/swingx-1.5-sample.jar">swingx-1.5-sample.jar</a></td>
            </tr>
          </tbody>
        </table>

        <p>
          To run demo type:
          <code>
            java -jar <a href="download/swingx-2.3-demo.jar">swingx-2.3-demo.jar</a>
          </code>
        </p>

        <p>
          To run with minimal configuration type:
          <code>java -jar swingx-2.3-demo.jar -minimal</code>
          <br /> <small>(no blurring of blocked window, no busy cursor when moving the mouse cursor over the blocked window and disabled iconify of a blocked internal frame.)</small>
        </p>

        <p>
          To run SUN Article sample type:
          <code>
            java -jar <a href="download/swingx-1.5-sample.jar">swingx-1.5-sample.jar</a>
          </code>
        </p>

        <div id="issues"></div>
      </div>
    </div>
  </div>


  <div class="container m-t-3 hidden-xs-down">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">Issues</h3>

        <table class="table table-sm table-striped">
          <thead>
            <tr>
              <th>#</th>
              <th>Description</th>
              <th>Fixed</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td></td>
              <td>Initial JDK 1.3 version.</td>
              <td>1.0</td>
            </tr>

            <tr>
              <td></td>
              <td>Initial JDK 1.4 version.</td>
              <td>1.2</td>
            </tr>

            <tr>
              <td>2</td>
              <td>Allow iconify of blocked frames when child modal frame is iconified.</td>
              <td>1.3</td>
            </tr>

            <tr>
              <td>3</td>
              <td>When a JModalFrame is deiconified because it is blocked the frame isn't repainted fully.</td>
              <td>1.3</td>
            </tr>

            <tr>
              <td>4</td>
              <td>Add the following method to the InputBlocker: addAdditionalModalToWindow(Window window), to make it possible to block more than one window.</td>
              <td>1.4</td>
            </tr>

            <tr>
              <td>5</td>
              <td>Create JModalDialog that behaves in the same way as the JModalFrame.</td>
              <td>1.4</td>
            </tr>

            <tr>
              <td>1</td>
              <td>Flickering JModalFrame when setBusy.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>6</td>
              <td>The library does not work properly in the second monitor in a dual monitor configuration. When you click the 'Open modal Window' button in the 'Test Modal Main Frame' (placed in the second monitor) the modal window does not appear
                relative to the button but in the first monitor.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>7</td>
              <td>New implementation for Utils.relativeToOwnerChild().</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>9</td>
              <td>Make blocked JModalWindow behave like JModalFrame. Because there is no proper event when the JModalWindow is activated via ALT+TAB only the mouse is supported.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>10</td>
              <td>When unblocked not only move toFront but deiconify.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>11</td>
              <td>Allow resizing and moving of blocked windows.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>12</td>
              <td>Change wait_for_close legacy c-style methodname.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>8</td>
              <td>Iconify support on InputBlocker interface.</td>
              <td>1.5</td>
            </tr>

            <tr>
              <td>14</td>
              <td>Enable configuration of settings (see also <a href="#faq1">FAQ 1</a>).
              </td>
              <td>1.6</td>
            </tr>

            <tr>
              <td>15</td>
              <td>Create a modal window close notify mechanism.</td>
              <td>1.7</td>
            </tr>

            <tr>
              <td>16</td>
              <td>Reactivation mechanism for blocking window must display parent.</td>
              <td>1.7</td>
            </tr>

            <tr>
              <td>17</td>
              <td>Blurring when resizing a JInternalFrame.</td>
              <td>2.1</td>
            </tr>

            <tr>
              <td>18</td>
              <td>Add modal internal frames.</td>
              <td>2.1</td>
            </tr>

            <tr>
              <td>19</td>
              <td>waitForClose on event dispatch thread (see also <a href="#faq2">FAQ 2</a>).
              </td>
              <td>2.1</td>
            </tr>

            <tr>
              <td>20</td>
              <td>Blurring based on alpha channel.</td>
              <td>2.2</td>
            </tr>

            <tr>
              <td>21</td>
              <td>Optionally block iconify for a JModalInternalFrame.</td>
              <td>2.3</td>
            </tr>

            <tr>
              <td>22</td>
              <td>JModalFrame can close when a JModalInternalFrame is blocked.</td>
              <td>2.3</td>
            </tr>

            <tr>
              <td>13</td>
              <td>Remove obselete code.</td>
              <td>Invalid</td>
            </tr>

            <tr>
              <td>23</td>
              <td>KeyboardFocusManager OOM</td>
              <td>Invalid</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>



  <div class="container m-t-3">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">Alternatives</h3>

        <ul>
          <li><p>
              If you just need a window-specific modal frame <a href="http://www.jroller.com/page/santhosh?entry=are_you_missing_maximize_button">Santhosh Kumar's Weblog</a> might provide a less intrusive alternative.
            </p></li>

          <li><p>Or take a look at the New Modality API in Mustang.</p></li>
        </ul>

        <div id="faq1"></div>
      </div>
    </div>
  </div>


  <div class="container m-t-3 hidden-xs-down">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">FAQ 1</h3>

        <blockquote class="blockquote card">
          <p class="text-primary">I can't change the STOP-icon! I've tried:</p>

          <blockquote>
            <code>
              UIManager.put("swingx.busy.cursor", "/home/images/custom-cursor.gif");<sup class="text-info">1)</sup>
            </code>
          </blockquote>

          <p class="text-primary">but then the STOP-icon is only changed to a smaller red square with a white X in it, which is not my icon&#8230; How can I fix this?</p>
        </blockquote>

        <p>
          The white cross on the red background is generated with
          <code>Utils.getMissingImage()</code>
          to indicate that the specified icon/image couldn't be found.
        </p>

        <p>To make the image available on the classpath there are two options:</p>

        <ol>
          <li><p>
              Place the image
              <code>busy_cursor.gif</code>
              in for example a subdirectory
              <code>&#8230;/classes/images</code>
              and add the following line to your code:
            </p>

            <blockquote>
              <code>UIManager.put("swingx.busy.cursor", "images/busy_cursor.gif");</code>
            </blockquote>

            <p>
              <strong>Note</strong>: if the class files are packaged in a jar make sure the images are also packaged in that jar.
            </p></li>

          <li>
            <p>
              The image
              <code>cursor.gif</code>
              is available in the directory
              <code>/usr/images</code>
              . Create a zip or jar file
              <code>&#8230;/dist/lib/usr.zip</code>
              containing the image and including the subfolders
              <code>/usr/images</code>
              . Then add the following line to your code:
            </p>

            <blockquote>
              <code>UIManager.put("swingx.busy.cursor", "usr/images/cursor.gif")</code>
            </blockquote>

            <p>
              And suppose the application is packaged in
              <code>&#8230;/dist/swingx-1.4-demo.jar</code>
              then run the application with the following command:
            </p>

            <blockquote>
              <code>java -classpath "swingx-1.4-demo.jar;lib/usr.zip" nl.jj.swingx.gui.modal.test.TestModalFrame</code>
            </blockquote>
          </li>
        </ol>

        <p>
          <strong>Note</strong>: In
          <code>
            UIManager.put("swingx.busy.cursor", "<strong class="text-success">/</strong>home/images/custom-cursor");
          </code>
          remove the <em class="text-success">first slash</em>, because there is a difference between
        </p>

        <ul>
          <li><code>
              getInstance().getClass().<strong>getClassLoader()</strong>.getResource(&#8230;);
            </code> which I used and</li>

          <li><code>
              getInstance().<strong>getClass()</strong>.getResource(&#8230;);
            </code></li>
        </ul>

        <p>in the way they retrieve the resource.</p>

        <p>By the way: Due to a Win32 problem the cursor to must be 32 x 32. To create a 16 x 16 icon use for example the upper left 16 x 16 pixels and fill the rest with a transparent color.</p>

        <hr />

        <small class="text-info"><sup>1)</sup> Since enhancement <a href="#issues">14</a> it is possible to use <code>JModalConfiguration.setBusyCursor(java.awt.Cursor)</code> as well.</small>

        <div id="faq2"></div>
      </div>
    </div>
  </div>


  <div class="container hidden-xs-down">
    <div class="row">
      <div class="col-xs-12 card">
        <h3 class="m-t-1 m-b-2">FAQ 2</h3>

        <blockquote class="blockquote card">
          <p class="text-primary">
            I'm having a problem using the
            <code>waitForClose()</code>
            method. Basically, when I use this method, the entire application freezes and won't respond to events or repaint itself.
          </p>
        </blockquote>

        <p>
          This is due to the fact that
          <code>wait()</code>
          shouldn't be called on the event dispatch thread. Which means the
          <code>waitForClose()</code>
          is useless in ActionListeners and the like. For this reason
          <code>waitForClose()</code>
          now throws the following
          <code>
            Error("Cannot call wait from the event dispatcher thread")<sup class="text-info">2)</sup>
          </code>
          when the method is called on the event dispath thread.
        </p>

        <p>
          If you need to implement some action, when the window is closed, use the
          <code>windowClosed</code>
          method of for example the
          <code>WindowAdapter</code>
          and supply this to the
          <code>addWindowListener</code>
          method of the window, you want to monitor. For an example of its usage see:
          <code>TestModalFrame</code>
          method
          <code>init()</code>
          command
          <code>jbNormalWindow.addActionListener(&#8230;);</code>
        </p>

        <hr />

        <p>
          <small> <sup class="text-info">2)</sup> Since enhancement <a href="#issues">19</a> it is now also possible to simulate wait on the event dispatch thread (EDT). Just call the <code>enableWaitOnEDT()</code> method of the <code>JModalConfiguration</code>
            class to activate this. <strong>Note</strong>: Because this method could throw a <code>java.lang.SecurityException</code> if a security manager exists and its <code>SecurityManager.checkAwtEventQueueAccess()</code> method denies access to the <code>EventQueue</code>
            , it <strong>isn't</strong> activated by <em>default</em>.
          </small>
        </p>
      </div>
    </div>
  </div>
  </main>

  <footer class="site-footer">
    <div id="generic-footer" />
  </footer>

  <script src="js/jquery.min.js" />
  <script src="js/tether.min.js" />
  <script src="js/bootstrap.min.js" />
  <script src="js/basketball.js" />
</body>
</html>
